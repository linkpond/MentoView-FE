# name: App with Github Actions, mentoview
# on:
#   # workflow_dispatch
#   push:
#     branches:
#       - dev
# jobs:
#   ci:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v4

#     - name: Setup Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '20'
#         cache: 'npm'

#     - name: Cache Node Modules
#       uses: actions/cache@v3
#       with:
#         path: ~/.npm
#         key: npm-${{ hashFiles('package-lock.json') }}
#         restore-keys: |
#           npm-

#     - name: Create .env file
#       run: |
#         echo "${{ secrets.ENV_VARS }}" > .env

#     - name: Install Dependencies
#       run: npm ci

#     - name: Cache Build Folder
#       uses: actions/cache@v3
#       with:
#         path: build
#         key: build-${{ github.sha }}
#         restore-keys: |
#           build-

#     - name: Build React App
#       run: CI=false npm run build -- --skip-build

#     - name: Upload build artifact
#       uses: actions/upload-artifact@v4
#       with:
#         name: react-app
#         path: build

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v4
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
#         IMAGE_TAG: fe-${{ github.sha }}
#       run: |
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
